# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 'adopt@1.11'

      - name: Build with Gradle Shadow
        run: ./gradlew shadowJar

      - name: Get current version
        id: get_version
        run: echo "::set-output name=version::$(grep -oP '(?<=version = \").*(?=\")' build.gradle)"

      - name: Calculate next version
        id: next_version
        run: |
          current_version=${{ steps.get_version.outputs.version }}
          major=$(echo $current_version | cut -d. -f1)
          minor=$(echo $current_version | cut -d. -f2)
          patch=$(echo $current_version | cut -d. -f3)

          if [ $patch -eq 9 ]; then
            if [ $minor -eq 9 ]; then
              next_version="$((major+1)).0.0"
            else
              next_version="$major.$((minor+1)).0"
            fi
          else
            next_version="$major.$minor.$((patch+1))"
          fi
          echo "::set-output name=next_version::$next_version"

      - name: Create release and upload artifact
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')

      - name: Update gradle.properties with new version
        run: echo "version=${{ steps.next_version.outputs.next_version }}" > gradle.properties

      - name: Commit and push new version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add gradle.properties
          git commit -m "Bump version to ${{ steps.next_version.outputs.next_version }}"
          git push

